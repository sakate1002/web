footer {
  position: relative;
  background: dimgray;
  color: white;
  padding: 3rem;
  text-align: center;
  z-index:20;/*描画を一番下に*/
}


.navi{
    margin: 0 auto;
    padding: 1rem;
}

.apart{
  padding-left: 1.5rem;
  padding-bottom: 1rem;
}

.px20{
  text-align: center;
  font-size:2rem;
  margin-bottom: 1rem;
  padding: 0;
}

#space_bottom{
  margin-bottom: 1rem;
}

#food{
  margin-top: 2rem;
}

@media (max-width:767px) {
    .row{
        flex-direction: column;
    }

    img{
        width: 100%;
    }
}

@media (max-width:767px) {
    .row, .inquiry {
      flex-direction: column;
    }
  }



  
  /*==================================================
  じわっ
  ===================================*/
  
  .blur{
    animation-name:blurAnime;
    animation-duration:1s;
    animation-fill-mode:forwards;
  }
  
  @keyframes blurAnime{
    from {
    filter: blur(10px);
    transform: scale(1.02);
    opacity: 0;
    }
  
    to {
    filter: blur(0);
    transform: scale(1);
    opacity: 1;
    }
  }
   
  .blurTrigger{
      opacity: 0;
  }

/*========= ローディング画面のためのCSS ===============*/
#splash {
  position: fixed;
  width: 100%;
  height: 100%;
  background: #333;
  z-index: 9999999;
  text-align:center;
  color:#fff;
}

#splash-logo {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.container{
  position: relative;
  background: #070A31;
  max-width: 1000px;
  margin: 0 auto;
  padding: 2rem;
} 

/*========= 画面遷移のためのCSS ===============*/

body{
    background:#333;/*遷移アニメーションと同じ色を指定*/
}

body.appear{
    background:#070A31;/*画面を開いた後の背景色を指定*/
}

/*画面遷移アニメーション*/
.splashbg1,
.splashbg2{
    display: none;
}

/*bodyにappearクラスがついたら出現*/
body.appear .splashbg1,
body.appear .splashbg2{
  display:block;
}

/*右に消えるエリア*/
body.appear .splashbg1{
  animation-name:PageAnime;
  animation-duration:1.2s;
  animation-timing-function:ease-in-out;
  animation-fill-mode:forwards;
    content: "";
    position:fixed;
  z-index: 999;
    width: 100%;
    height: 100vh;
    top: 0;
  left:50%;
    transform: scaleX(1);
    background-color: #333;/*伸びる背景色の設定*/
}

@keyframes PageAnime{
  0% {
    transform-origin:left;
    transform:scaleX(1);
  }
  50% {
    transform-origin:right;
  }
  100% {
    transform-origin:right;
    transform:scaleX(0);
  }
}

/*左に消えるエリア*/
body.appear .splashbg2{
  animation-name:PageAnime2;
  animation-duration:1.2s;
  animation-timing-function:ease-in-out;
  animation-fill-mode:forwards;
    content: "";
    position:fixed;
  z-index: 999;
    width: 100%;
    height: 100vh;
    top: 0;
  right:50%;
    transform: scaleX(1);
    background-color: #333;/*伸びる背景色の設定*/
}

@keyframes PageAnime2{
  0% {
    transform-origin:right;
    transform:scaleX(1);
  }

  50% {
    transform-origin:left;
  }
  100% {
    transform-origin:left;
    transform:scaleX(0);
  }
}

/*画面遷移の後現れるコンテンツ設定*/
#container{
  opacity: 0;/*はじめは透過0に*/
}

/*bodyにappearクラスがついたら出現*/
body.appear #container{
  animation-name:PageAnimeAppear;
  animation-duration:1s;
  animation-delay:0.2s;
  animation-fill-mode:forwards;
  opacity: 0;
}

@keyframes PageAnimeAppear{
  0% {
  opacity: 0;
  }
  100% {
  opacity: 1;
}
}

/*========= レイアウトのためのCSS ===============*/

h1{
  font-size:1.2rem;
  color: white;
}

h2{
  font-size:1.2rem;
  color: white;
}

h3{
  text-align: center;
  padding-right: 1rem;
  margin-right: 1rem;
  color: white;
}


small{
  color:#fff;
  display: block;
  text-align: center;
}

#header{
  background:#333;
  color:#070A31;
  text-align: center;
  padding: 20px;
  color: white;
}

section{
  padding:30px 30px;
  color: white;
}

section:nth-child(2n){
  background:#f3f3f3; 
}

#footer{
  background:#333;
  padding:20px;
}

/*========= レイアウトのためのCSS ===============*/

.flex{
  display:flex;
  flex-wrap: wrap;
}

.box{
  width: 220px;
  padding: 20px;
    margin: 0 20px 20px 20px;
  background: yellowgreen;
  color: #fff;
  border-radius: 0.67em;   /* 角丸 */
  box-sizing:border-box;
    list-style: none;
}

/*==================================================
スタート時は要素自体を透過0にするためのopacity:0;を指定する
===================================*/

.box{
  opacity: 0;
}

/*==================================================
ふわっ
===================================*/

.fadeUp {
animation-name:fadeUpAnime;
animation-duration:0.5s;
animation-fill-mode:forwards;
opacity: 0;
}

@keyframes fadeUpAnime{
  from {
    opacity: 0;
  transform: translateY(100px);
  }

  to {
    opacity: 1;
  transform: translateY(0);
  }
}


/*==================================================
スライダーのためのcss
===================================*/
.slider {/*横幅94%で左右に余白を持たせて中央寄せ*/
  width:94%;
  margin:0 auto;
}

.slider img {
  width:60vw;/*スライダー内の画像を60vwにしてレスポンシブ化*/
  height:auto;
}

.slider .slick-slide {
transform: scale(0.8);/*左右の画像のサイズを80%に*/
transition: all .5s;/*拡大や透過のアニメーションを0.5秒で行う*/
opacity: 0.5;/*透過50%*/
}

.slider .slick-slide.slick-center{
transform: scale(1);/*中央の画像のサイズだけ等倍に*/
opacity: 1;/*透過なし*/
}


/*矢印の設定*/

/*戻る、次へ矢印の位置*/
.slick-prev, 
.slick-next {
  position: absolute;/*絶対配置にする*/
  top: 42%;
  cursor: pointer;/*マウスカーソルを指マークに*/
  outline: none;/*クリックをしたら出てくる枠線を消す*/
  border-top: 2px solid #666;/*矢印の色*/
  border-right: 2px solid #666;/*矢印の色*/
  height: 15px;
  width: 15px;
}

.slick-prev {/*戻る矢印の位置と形状*/
  left: -1.5%;
  transform: rotate(-135deg);
}

.slick-next {/*次へ矢印の位置と形状*/
  right: -1.5%;
  transform: rotate(45deg);
}

/*ドットナビゲーションの設定*/

.slick-dots {
  text-align:center;
margin:20px 0 0 0;
}

.slick-dots li {
  display:inline-block;
margin:0 5px;
}

.slick-dots button {
  color: transparent;
  outline: none;
  width:8px;/*ドットボタンのサイズ*/
  height:8px;/*ドットボタンのサイズ*/
  display:block;
  border-radius:50%;
  background:#ccc;/*ドットボタンの色*/
}

.slick-dots .slick-active button{
  background:#333;/*ドットボタンの現在地表示の色*/
}


/*========= レイアウトのためのCSS ===============*/


h2,p {
  text-align:center;
  padding:20px;
  color: white;
}

h4{
  color: white;
}

h5{
  color: white;
}

ul{
margin:0;
padding: 0;
list-style: none;
}

a{
color: #333;
}

a:hover,
a:active{
text-decoration: none;
}

